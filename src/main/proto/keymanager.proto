syntax = "proto3";

option java_multiple_files = true;
option java_package = "keymanagergrpc.br.com.guilherme";
option java_outer_classname = "Keymanager";
option objc_class_prefix = "HLW";

import "google/protobuf/empty.proto";

package keymanagergrpc.br.com.guilherme;



service CreateKeyService {
  rpc registra (CreateRequest) returns (CreateResponse) {}
}

service ExcludeKeyService {
  rpc exclui (ExcludeKeyRequest) returns (google.protobuf.Empty) {}
}

service CheckKeyService {
  rpc consulta (CheckKeyRequest) returns (CheckKeyResponse) {}
}

service ListKeyService {
  rpc listar (ListKeyRequest) returns (stream ListKeyResponse) {}
}

// tipo de chave
enum KeyType {
    UNKNOWN_TYPE = 0;
    CPF = 1;
    CNPJ = 2;
    PHONE = 3;
    EMAIL = 4;
    RANDOM = 5;
}

// tipo de conta
enum AccountType {
  UNKNOWN_ACCOUNT = 0;
  CONTA_CORRENTE = 1;
  CONTA_POUPANCA = 2;
}

message CreateRequest {
  // identificador do cliente (uuid)
  string id = 1;
  // definindo o tipo de chave
  KeyType keyType = 2;

  /**
   * valor da chave
   - Quando tipo for CPF, deve ser obrigatório e usar formato `^[0-9]{11}$` (por exemplo: `12345678901`);

    - Quando tipo for telefone celular, deve ser obrigatório e usar formato `^\+[1-9][0-9]\d{1,14}$`
    (por exemplo: `+5585988714077`);

    - Quando tipo for email, deve ser obrigatório e um endereço válido;

    - Quando tipo for chave aleatória, o valor da chave **não** deve ser preenchido pois o mesmo deve
    ser gerado pelo sistema no [formato UUID]

   */
  string chave = 3;

  // Tipo de conta (Conta corrente ou Conta poupança)
  AccountType accountType = 4;
}

message CreateResponse {
  string pixid = 1;
}

message ExcludeKeyRequest {
  string pixid = 1;
  string clientid = 2;
}

message CheckKeyRequest {

  message PorPixId {
    string pixId = 1;
    string clientId = 2;
  }

  optional PorPixId porPixId = 1;
  optional string porChave = 2;

}

message CheckKeyResponse {
  string pixid = 1;
  string clientid = 2;
  KeyType keytype = 3;
  string key = 4;
  string nometitular = 5;
  string cpftitular = 6;
  message Instituicao {
    string nome = 1;
    string numero = 2;
    AccountType accounttype = 3;
  }
  Instituicao instituicao = 7;
  string datahora = 8;
}

message ListKeyRequest {
  string clientId = 1;
}
/*
Pix ID;
Identificador do cliente;
Tipo da chave;
Valor da chave;
tipo da conta (Corrente ou Poupança);
Data/hora de registro ou criação da chave;
 */
message ListKeyResponse {
  string pixId = 1;
  string clientId = 2;
  KeyType keyType = 3;
  string key = 4;
  AccountType accountType = 5;
  string dataregistro = 6;
}